{"version":3,"sources":["../node_modules/monaco-editor/esm/vs/basic-languages/markdown/markdown.js"],"names":["TOKEN_HEADER_LEAD","TOKEN_HEADER","TOKEN_EXT_HEADER","TOKEN_SEPARATOR","TOKEN_QUOTE","TOKEN_LIST","TOKEN_BLOCK","TOKEN_BLOCK_CODE","DELIM_ASSIGN","ATTRIB_NAME","ATTRIB_VALUE","getTag","name","conf","comments","blockComment","brackets","autoClosingPairs","open","close","notIn","surroundingPairs","folding","markers","start","RegExp","end","language","defaultToken","tokenPostfix","control","noncontrol","escapes","jsescapes","empty","tokenizer","root","token","next","nextEmbedded","include","codeblock","codeblockgh","linecontent","html","cases","comment","tag","switchTo","embeddedStyle","embeddedScript"],"mappings":"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","file":"markdown.83bf6709.map","sourceRoot":"../public","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nvar TOKEN_HEADER_LEAD = 'keyword';\nvar TOKEN_HEADER = 'keyword';\nvar TOKEN_EXT_HEADER = 'keyword';\nvar TOKEN_SEPARATOR = 'meta.separator';\nvar TOKEN_QUOTE = 'comment';\nvar TOKEN_LIST = 'keyword';\nvar TOKEN_BLOCK = 'string';\nvar TOKEN_BLOCK_CODE = 'variable.source';\nvar DELIM_ASSIGN = 'delimiter.html';\nvar ATTRIB_NAME = 'attribute.name.html';\nvar ATTRIB_VALUE = 'string.html';\nfunction getTag(name) {\n    return 'tag';\n}\nexport var conf = {\n    comments: {\n        blockComment: ['<!--', '-->',]\n    },\n    brackets: [\n        ['{', '}'],\n        ['[', ']'],\n        ['(', ')']\n    ],\n    autoClosingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '<', close: '>', notIn: ['string'] }\n    ],\n    surroundingPairs: [\n        { open: '(', close: ')' },\n        { open: '[', close: ']' },\n        { open: '`', close: '`' },\n    ],\n    folding: {\n        markers: {\n            start: new RegExp(\"^\\\\s*<!--\\\\s*#?region\\\\b.*-->\"),\n            end: new RegExp(\"^\\\\s*<!--\\\\s*#?endregion\\\\b.*-->\")\n        }\n    }\n};\nexport var language = {\n    defaultToken: '',\n    tokenPostfix: '.md',\n    // escape codes\n    control: /[\\\\`*_\\[\\]{}()#+\\-\\.!]/,\n    noncontrol: /[^\\\\`*_\\[\\]{}()#+\\-\\.!]/,\n    escapes: /\\\\(?:@control)/,\n    // escape codes for javascript/CSS strings\n    jsescapes: /\\\\(?:[btnfr\\\\\"']|[0-7][0-7]?|[0-3][0-7]{2})/,\n    // non matched elements\n    empty: [\n        'area', 'base', 'basefont', 'br', 'col', 'frame',\n        'hr', 'img', 'input', 'isindex', 'link', 'meta', 'param'\n    ],\n    tokenizer: {\n        root: [\n            // headers (with #)\n            [/^(\\s{0,3})(#+)((?:[^\\\\#]|@escapes)+)((?:#+)?)/, ['white', TOKEN_HEADER_LEAD, TOKEN_HEADER, TOKEN_HEADER]],\n            // headers (with =)\n            [/^\\s*(=+|\\-+)\\s*$/, TOKEN_EXT_HEADER],\n            // headers (with ***)\n            [/^\\s*((\\*[ ]?)+)\\s*$/, TOKEN_SEPARATOR],\n            // quote\n            [/^\\s*>+/, TOKEN_QUOTE],\n            // list (starting with * or number)\n            [/^\\s*([\\*\\-+:]|\\d+\\.)\\s/, TOKEN_LIST],\n            // code block (4 spaces indent)\n            [/^(\\t|[ ]{4})[^ ].*$/, TOKEN_BLOCK],\n            // code block (3 tilde)\n            [/^\\s*~~~\\s*((?:\\w|[\\/\\-#])+)?\\s*$/, { token: TOKEN_BLOCK, next: '@codeblock' }],\n            // github style code blocks (with backticks and language)\n            [/^\\s*```\\s*((?:\\w|[\\/\\-#])+)\\s*$/, { token: TOKEN_BLOCK, next: '@codeblockgh', nextEmbedded: '$1' }],\n            // github style code blocks (with backticks but no language)\n            [/^\\s*```\\s*$/, { token: TOKEN_BLOCK, next: '@codeblock' }],\n            // markup within lines\n            { include: '@linecontent' },\n        ],\n        codeblock: [\n            [/^\\s*~~~\\s*$/, { token: TOKEN_BLOCK, next: '@pop' }],\n            [/^\\s*```\\s*$/, { token: TOKEN_BLOCK, next: '@pop' }],\n            [/.*$/, TOKEN_BLOCK_CODE],\n        ],\n        // github style code blocks\n        codeblockgh: [\n            [/```\\s*$/, { token: TOKEN_BLOCK_CODE, next: '@pop', nextEmbedded: '@pop' }],\n            [/[^`]+/, TOKEN_BLOCK_CODE],\n        ],\n        linecontent: [\n            // escapes\n            [/&\\w+;/, 'string.escape'],\n            [/@escapes/, 'escape'],\n            // various markup\n            [/\\b__([^\\\\_]|@escapes|_(?!_))+__\\b/, 'strong'],\n            [/\\*\\*([^\\\\*]|@escapes|\\*(?!\\*))+\\*\\*/, 'strong'],\n            [/\\b_[^_]+_\\b/, 'emphasis'],\n            [/\\*([^\\\\*]|@escapes)+\\*/, 'emphasis'],\n            [/`([^\\\\`]|@escapes)+`/, 'variable'],\n            // links\n            [/\\{[^}]+\\}/, 'string.target'],\n            [/(!?\\[)((?:[^\\]\\\\]|@escapes)*)(\\]\\([^\\)]+\\))/, ['string.link', '', 'string.link']],\n            [/(!?\\[)((?:[^\\]\\\\]|@escapes)*)(\\])/, 'string.link'],\n            // or html\n            { include: 'html' },\n        ],\n        // Note: it is tempting to rather switch to the real HTML mode instead of building our own here\n        // but currently there is a limitation in Monarch that prevents us from doing it: The opening\n        // '<' would start the HTML mode, however there is no way to jump 1 character back to let the\n        // HTML mode also tokenize the opening angle bracket. Thus, even though we could jump to HTML,\n        // we cannot correctly tokenize it in that mode yet.\n        html: [\n            // html tags\n            [/<(\\w+)\\/>/, getTag('$1')],\n            [/<(\\w+)/, {\n                    cases: {\n                        '@empty': { token: getTag('$1'), next: '@tag.$1' },\n                        '@default': { token: getTag('$1'), next: '@tag.$1' }\n                    }\n                }],\n            [/<\\/(\\w+)\\s*>/, { token: getTag('$1') }],\n            [/<!--/, 'comment', '@comment']\n        ],\n        comment: [\n            [/[^<\\-]+/, 'comment.content'],\n            [/-->/, 'comment', '@pop'],\n            [/<!--/, 'comment.content.invalid'],\n            [/[<\\-]/, 'comment.content']\n        ],\n        // Almost full HTML tag matching, complete with embedded scripts & styles\n        tag: [\n            [/[ \\t\\r\\n]+/, 'white'],\n            [/(type)(\\s*=\\s*)(\")([^\"]+)(\")/, [ATTRIB_NAME, DELIM_ASSIGN, ATTRIB_VALUE,\n                    { token: ATTRIB_VALUE, switchTo: '@tag.$S2.$4' },\n                    ATTRIB_VALUE]],\n            [/(type)(\\s*=\\s*)(')([^']+)(')/, [ATTRIB_NAME, DELIM_ASSIGN, ATTRIB_VALUE,\n                    { token: ATTRIB_VALUE, switchTo: '@tag.$S2.$4' },\n                    ATTRIB_VALUE]],\n            [/(\\w+)(\\s*=\\s*)(\"[^\"]*\"|'[^']*')/, [ATTRIB_NAME, DELIM_ASSIGN, ATTRIB_VALUE]],\n            [/\\w+/, ATTRIB_NAME],\n            [/\\/>/, getTag('$S2'), '@pop'],\n            [/>/, {\n                    cases: {\n                        '$S2==style': { token: getTag('$S2'), switchTo: 'embeddedStyle', nextEmbedded: 'text/css' },\n                        '$S2==script': {\n                            cases: {\n                                '$S3': { token: getTag('$S2'), switchTo: 'embeddedScript', nextEmbedded: '$S3' },\n                                '@default': { token: getTag('$S2'), switchTo: 'embeddedScript', nextEmbedded: 'text/javascript' }\n                            }\n                        },\n                        '@default': { token: getTag('$S2'), next: '@pop' }\n                    }\n                }],\n        ],\n        embeddedStyle: [\n            [/[^<]+/, ''],\n            [/<\\/style\\s*>/, { token: '@rematch', next: '@pop', nextEmbedded: '@pop' }],\n            [/</, '']\n        ],\n        embeddedScript: [\n            [/[^<]+/, ''],\n            [/<\\/script\\s*>/, { token: '@rematch', next: '@pop', nextEmbedded: '@pop' }],\n            [/</, '']\n        ],\n    }\n};\n"]}