{"version":3,"sources":["../node_modules/monaco-editor/esm/vs/basic-languages/cpp/cpp.js"],"names":["conf","comments","lineComment","blockComment","brackets","autoClosingPairs","open","close","notIn","surroundingPairs","folding","markers","start","RegExp","end","language","defaultToken","tokenPostfix","token","keywords","operators","symbols","escapes","integersuffix","floatsuffix","encoding","tokenizer","root","next","cases","include","whitespace","comment","doccomment","string","raw"],"mappings":"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","file":"cpp.2aea9d59.map","sourceRoot":"../public","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nexport var conf = {\n    comments: {\n        lineComment: '//',\n        blockComment: ['/*', '*/'],\n    },\n    brackets: [\n        ['{', '}'],\n        ['[', ']'],\n        ['(', ')']\n    ],\n    autoClosingPairs: [\n        { open: '[', close: ']' },\n        { open: '{', close: '}' },\n        { open: '(', close: ')' },\n        { open: '\\'', close: '\\'', notIn: ['string', 'comment'] },\n        { open: '\"', close: '\"', notIn: ['string'] },\n    ],\n    surroundingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: '\\'', close: '\\'' },\n    ],\n    folding: {\n        markers: {\n            start: new RegExp(\"^\\\\s*#pragma\\\\s+region\\\\b\"),\n            end: new RegExp(\"^\\\\s*#pragma\\\\s+endregion\\\\b\")\n        }\n    }\n};\nexport var language = {\n    defaultToken: '',\n    tokenPostfix: '.cpp',\n    brackets: [\n        { token: 'delimiter.curly', open: '{', close: '}' },\n        { token: 'delimiter.parenthesis', open: '(', close: ')' },\n        { token: 'delimiter.square', open: '[', close: ']' },\n        { token: 'delimiter.angle', open: '<', close: '>' }\n    ],\n    keywords: [\n        'abstract',\n        'amp',\n        'array',\n        'auto',\n        'bool',\n        'break',\n        'case',\n        'catch',\n        'char',\n        'class',\n        'const',\n        'constexpr',\n        'const_cast',\n        'continue',\n        'cpu',\n        'decltype',\n        'default',\n        'delegate',\n        'delete',\n        'do',\n        'double',\n        'dynamic_cast',\n        'each',\n        'else',\n        'enum',\n        'event',\n        'explicit',\n        'export',\n        'extern',\n        'false',\n        'final',\n        'finally',\n        'float',\n        'for',\n        'friend',\n        'gcnew',\n        'generic',\n        'goto',\n        'if',\n        'in',\n        'initonly',\n        'inline',\n        'int',\n        'interface',\n        'interior_ptr',\n        'internal',\n        'literal',\n        'long',\n        'mutable',\n        'namespace',\n        'new',\n        'noexcept',\n        'nullptr',\n        '__nullptr',\n        'operator',\n        'override',\n        'partial',\n        'pascal',\n        'pin_ptr',\n        'private',\n        'property',\n        'protected',\n        'public',\n        'ref',\n        'register',\n        'reinterpret_cast',\n        'restrict',\n        'return',\n        'safe_cast',\n        'sealed',\n        'short',\n        'signed',\n        'sizeof',\n        'static',\n        'static_assert',\n        'static_cast',\n        'struct',\n        'switch',\n        'template',\n        'this',\n        'thread_local',\n        'throw',\n        'tile_static',\n        'true',\n        'try',\n        'typedef',\n        'typeid',\n        'typename',\n        'union',\n        'unsigned',\n        'using',\n        'virtual',\n        'void',\n        'volatile',\n        'wchar_t',\n        'where',\n        'while',\n        '_asm',\n        '_based',\n        '_cdecl',\n        '_declspec',\n        '_fastcall',\n        '_if_exists',\n        '_if_not_exists',\n        '_inline',\n        '_multiple_inheritance',\n        '_pascal',\n        '_single_inheritance',\n        '_stdcall',\n        '_virtual_inheritance',\n        '_w64',\n        '__abstract',\n        '__alignof',\n        '__asm',\n        '__assume',\n        '__based',\n        '__box',\n        '__builtin_alignof',\n        '__cdecl',\n        '__clrcall',\n        '__declspec',\n        '__delegate',\n        '__event',\n        '__except',\n        '__fastcall',\n        '__finally',\n        '__forceinline',\n        '__gc',\n        '__hook',\n        '__identifier',\n        '__if_exists',\n        '__if_not_exists',\n        '__inline',\n        '__int128',\n        '__int16',\n        '__int32',\n        '__int64',\n        '__int8',\n        '__interface',\n        '__leave',\n        '__m128',\n        '__m128d',\n        '__m128i',\n        '__m256',\n        '__m256d',\n        '__m256i',\n        '__m64',\n        '__multiple_inheritance',\n        '__newslot',\n        '__nogc',\n        '__noop',\n        '__nounwind',\n        '__novtordisp',\n        '__pascal',\n        '__pin',\n        '__pragma',\n        '__property',\n        '__ptr32',\n        '__ptr64',\n        '__raise',\n        '__restrict',\n        '__resume',\n        '__sealed',\n        '__single_inheritance',\n        '__stdcall',\n        '__super',\n        '__thiscall',\n        '__try',\n        '__try_cast',\n        '__typeof',\n        '__unaligned',\n        '__unhook',\n        '__uuidof',\n        '__value',\n        '__virtual_inheritance',\n        '__w64',\n        '__wchar_t'\n    ],\n    operators: [\n        '=', '>', '<', '!', '~', '?', ':',\n        '==', '<=', '>=', '!=', '&&', '||', '++', '--',\n        '+', '-', '*', '/', '&', '|', '^', '%', '<<',\n        '>>', '>>>', '+=', '-=', '*=', '/=', '&=', '|=',\n        '^=', '%=', '<<=', '>>=', '>>>='\n    ],\n    // we include these common regular expressions\n    symbols: /[=><!~?:&|+\\-*\\/\\^%]+/,\n    escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n    integersuffix: /(ll|LL|u|U|l|L)?(ll|LL|u|U|l|L)?/,\n    floatsuffix: /[fFlL]?/,\n    encoding: /u|u8|U|L/,\n    // The main tokenizer for our languages\n    tokenizer: {\n        root: [\n            // C++ 11 Raw String\n            [/@encoding?R\\\"(?:([^ ()\\\\\\t]*))\\(/, { token: 'string.raw.begin', next: '@raw.$1' }],\n            // identifiers and keywords\n            [/[a-zA-Z_]\\w*/, {\n                    cases: {\n                        '@keywords': { token: 'keyword.$0' },\n                        '@default': 'identifier'\n                    }\n                }],\n            // whitespace\n            { include: '@whitespace' },\n            // [[ attributes ]].\n            [/\\[\\[.*\\]\\]/, 'annotation'],\n            [/^\\s*#include/, { token: 'keyword.directive.include', next: '@include' }],\n            // Preprocessor directive\n            [/^\\s*#\\s*\\w+/, 'keyword'],\n            // delimiters and operators\n            [/[{}()\\[\\]]/, '@brackets'],\n            [/[<>](?!@symbols)/, '@brackets'],\n            [/@symbols/, {\n                    cases: {\n                        '@operators': 'delimiter',\n                        '@default': ''\n                    }\n                }],\n            // numbers\n            [/\\d*\\d+[eE]([\\-+]?\\d+)?(@floatsuffix)/, 'number.float'],\n            [/\\d*\\.\\d+([eE][\\-+]?\\d+)?(@floatsuffix)/, 'number.float'],\n            [/0[xX][0-9a-fA-F']*[0-9a-fA-F](@integersuffix)/, 'number.hex'],\n            [/0[0-7']*[0-7](@integersuffix)/, 'number.octal'],\n            [/0[bB][0-1']*[0-1](@integersuffix)/, 'number.binary'],\n            [/\\d[\\d']*\\d(@integersuffix)/, 'number'],\n            [/\\d(@integersuffix)/, 'number'],\n            // delimiter: after number because of .\\d floats\n            [/[;,.]/, 'delimiter'],\n            // strings\n            [/\"([^\"\\\\]|\\\\.)*$/, 'string.invalid'],\n            [/\"/, 'string', '@string'],\n            // characters\n            [/'[^\\\\']'/, 'string'],\n            [/(')(@escapes)(')/, ['string', 'string.escape', 'string']],\n            [/'/, 'string.invalid']\n        ],\n        whitespace: [\n            [/[ \\t\\r\\n]+/, ''],\n            [/\\/\\*\\*(?!\\/)/, 'comment.doc', '@doccomment'],\n            [/\\/\\*/, 'comment', '@comment'],\n            [/\\/\\/.*$/, 'comment'],\n        ],\n        comment: [\n            [/[^\\/*]+/, 'comment'],\n            [/\\*\\//, 'comment', '@pop'],\n            [/[\\/*]/, 'comment']\n        ],\n        //Identical copy of comment above, except for the addition of .doc\n        doccomment: [\n            [/[^\\/*]+/, 'comment.doc'],\n            [/\\*\\//, 'comment.doc', '@pop'],\n            [/[\\/*]/, 'comment.doc']\n        ],\n        string: [\n            [/[^\\\\\"]+/, 'string'],\n            [/@escapes/, 'string.escape'],\n            [/\\\\./, 'string.escape.invalid'],\n            [/\"/, 'string', '@pop']\n        ],\n        raw: [\n            [/(.*)(\\))(?:([^ ()\\\\\\t]*))(\\\")/, {\n                    cases: {\n                        '$3==$S2': ['string.raw', 'string.raw.end', 'string.raw.end', { token: 'string.raw.end', next: '@pop' }],\n                        '@default': ['string.raw', 'string.raw', 'string.raw', 'string.raw']\n                    }\n                }\n            ],\n            [/.*/, 'string.raw']\n        ],\n        include: [\n            [/(\\s*)(<)([^<>]*)(>)/, ['', 'keyword.directive.include.begin', 'string.include.identifier', { token: 'keyword.directive.include.end', next: '@pop' }]],\n            [/(\\s*)(\")([^\"]*)(\")/, ['', 'keyword.directive.include.begin', 'string.include.identifier', { token: 'keyword.directive.include.end', next: '@pop' }]]\n        ]\n    },\n};\n"]}