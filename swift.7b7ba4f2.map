{"version":3,"sources":["../node_modules/monaco-editor/esm/vs/basic-languages/swift/swift.js"],"names":["conf","comments","lineComment","blockComment","brackets","autoClosingPairs","open","close","surroundingPairs","language","defaultToken","tokenPostfix","identifier","attributes","accessmodifiers","keywords","symbols","operatorstart","operatorend","operators","escapes","tokenizer","root","include","symbol","comment","commentdocbody","commentbody","attribute","cases","literal","token","next","stringlit","interpolatedexpression","keyword","escapedkeyword","invokedmethod"],"mappings":"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","file":"swift.7b7ba4f2.map","sourceRoot":"../public","sourcesContent":["/*!---------------------------------------------------------------------------------------------\n *  Copyright (C) David Owens II, owensd.io. All rights reserved.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nexport var conf = {\n    comments: {\n        lineComment: '//',\n        blockComment: ['/*', '*/'],\n    },\n    brackets: [\n        ['{', '}'],\n        ['[', ']'],\n        ['(', ')']\n    ],\n    autoClosingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: '\\'', close: '\\'' },\n        { open: '`', close: '`' },\n    ],\n    surroundingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: '\\'', close: '\\'' },\n        { open: '`', close: '`' },\n    ]\n};\nexport var language = {\n    defaultToken: '',\n    tokenPostfix: '.swift',\n    // TODO(owensd): Support the full range of unicode valid identifiers.\n    identifier: /[a-zA-Z_][\\w$]*/,\n    // TODO(owensd): Support the @availability macro properly.\n    attributes: [\n        '@autoclosure', '@noescape', '@noreturn', '@NSApplicationMain', '@NSCopying', '@NSManaged',\n        '@objc', '@UIApplicationMain', '@noreturn', '@availability', '@IBAction', '@IBDesignable', '@IBInspectable', '@IBOutlet'\n    ],\n    accessmodifiers: ['public', 'private', 'internal'],\n    keywords: [\n        '__COLUMN__', '__FILE__', '__FUNCTION__', '__LINE__', 'as', 'as!', 'as?', 'associativity', 'break', 'case', 'catch',\n        'class', 'continue', 'convenience', 'default', 'deinit', 'didSet', 'do', 'dynamic', 'dynamicType',\n        'else', 'enum', 'extension', 'fallthrough', 'final', 'for', 'func', 'get', 'guard', 'if', 'import', 'in', 'infix',\n        'init', 'inout', 'internal', 'is', 'lazy', 'left', 'let', 'mutating', 'nil', 'none', 'nonmutating', 'operator',\n        'optional', 'override', 'postfix', 'precedence', 'prefix', 'private', 'protocol', 'Protocol', 'public',\n        'repeat', 'required', 'return', 'right', 'self', 'Self', 'set', 'static', 'struct', 'subscript', 'super', 'switch',\n        'throw', 'throws', 'try', 'try!', 'Type', 'typealias', 'unowned', 'var', 'weak', 'where', 'while', 'willSet', 'FALSE', 'TRUE'\n    ],\n    symbols: /[=(){}\\[\\].,:;@#\\_&\\-<>`?!+*\\\\\\/]/,\n    // Moved . to operatorstart so it can be a delimiter\n    operatorstart: /[\\/=\\-+!*%<>&|^~?\\u00A1-\\u00A7\\u00A9\\u00AB\\u00AC\\u00AE\\u00B0-\\u00B1\\u00B6\\u00BB\\u00BF\\u00D7\\u00F7\\u2016-\\u2017\\u2020-\\u2027\\u2030-\\u203E\\u2041-\\u2053\\u2055-\\u205E\\u2190-\\u23FF\\u2500-\\u2775\\u2794-\\u2BFF\\u2E00-\\u2E7F\\u3001-\\u3003\\u3008-\\u3030]/,\n    operatorend: /[\\u0300-\\u036F\\u1DC0-\\u1DFF\\u20D0-\\u20FF\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\uE0100-\\uE01EF]/,\n    operators: /(@operatorstart)((@operatorstart)|(@operatorend))*/,\n    // TODO(owensd): These are borrowed from C#; need to validate correctness for Swift.\n    escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n    tokenizer: {\n        root: [\n            { include: '@comment' },\n            { include: '@attribute' },\n            { include: '@literal' },\n            { include: '@keyword' },\n            { include: '@invokedmethod' },\n            { include: '@symbol' },\n        ],\n        symbol: [\n            [/[{}()\\[\\]]/, '@brackets'],\n            [/[<>](?!@symbols)/, '@brackets'],\n            [/[.]/, 'delimiter'],\n            [/@operators/, 'operator'],\n            [/@symbols/, 'operator']\n        ],\n        comment: [\n            [/\\/\\/\\/.*$/, 'comment.doc'],\n            [/\\/\\*\\*/, 'comment.doc', '@commentdocbody'],\n            [/\\/\\/.*$/, 'comment'],\n            [/\\/\\*/, 'comment', '@commentbody']\n        ],\n        commentdocbody: [\n            [/\\/\\*/, 'comment', '@commentbody'],\n            [/\\*\\//, 'comment.doc', '@pop'],\n            [/\\:[a-zA-Z]+\\:/, 'comment.doc.param'],\n            [/./, 'comment.doc']\n        ],\n        commentbody: [\n            [/\\/\\*/, 'comment', '@commentbody'],\n            [/\\*\\//, 'comment', '@pop'],\n            [/./, 'comment']\n        ],\n        attribute: [\n            [/\\@@identifier/, {\n                    cases: {\n                        '@attributes': 'keyword.control',\n                        '@default': ''\n                    }\n                }]\n        ],\n        literal: [\n            [/\"/, { token: 'string.quote', next: '@stringlit' }],\n            [/0[b]([01]_?)+/, 'number.binary'],\n            [/0[o]([0-7]_?)+/, 'number.octal'],\n            [/0[x]([0-9a-fA-F]_?)+([pP][\\-+](\\d_?)+)?/, 'number.hex'],\n            [/(\\d_?)*\\.(\\d_?)+([eE][\\-+]?(\\d_?)+)?/, 'number.float'],\n            [/(\\d_?)+/, 'number']\n        ],\n        stringlit: [\n            [/\\\\\\(/, { token: 'operator', next: '@interpolatedexpression' }],\n            [/@escapes/, 'string'],\n            [/\\\\./, 'string.escape.invalid'],\n            [/\"/, { token: 'string.quote', next: '@pop' }],\n            [/./, 'string']\n        ],\n        interpolatedexpression: [\n            [/\\(/, { token: 'operator', next: '@interpolatedexpression' }],\n            [/\\)/, { token: 'operator', next: '@pop' }],\n            { include: '@literal' },\n            { include: '@keyword' },\n            { include: '@symbol' }\n        ],\n        keyword: [\n            [/`/, { token: 'operator', next: '@escapedkeyword' }],\n            [/@identifier/, {\n                    cases: {\n                        '@keywords': 'keyword', '[A-Z][\\a-zA-Z0-9$]*': 'type.identifier',\n                        '@default': 'identifier'\n                    }\n                }]\n        ],\n        escapedkeyword: [\n            [/`/, { token: 'operator', next: '@pop' }],\n            [/./, 'identifier']\n        ],\n        //\t\tsymbol: [\n        //\t\t\t[ /@symbols/, 'operator' ],\n        //\t\t\t[ /@operators/, 'operator' ]\n        //\t\t],\n        invokedmethod: [\n            [/([.])(@identifier)/, {\n                    cases: {\n                        '$2': ['delimeter', 'type.identifier'],\n                        '@default': ''\n                    }\n                }],\n        ]\n    }\n};\n"]}