{"version":3,"sources":["../node_modules/monaco-editor/esm/vs/basic-languages/objective-c/objective-c.js"],"names":["conf","comments","lineComment","blockComment","brackets","autoClosingPairs","open","close","surroundingPairs","language","defaultToken","tokenPostfix","keywords","decpart","decimal","tokenizer","root","include","cases","whitespace","comment","numbers","strings","stringBody","dblStringBody"],"mappings":"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","file":"objective-c.241fedff.map","sourceRoot":"../public","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nexport var conf = {\n    comments: {\n        lineComment: '//',\n        blockComment: ['/*', '*/'],\n    },\n    brackets: [\n        ['{', '}'],\n        ['[', ']'],\n        ['(', ')']\n    ],\n    autoClosingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: '\\'', close: '\\'' },\n    ],\n    surroundingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: '\\'', close: '\\'' },\n    ]\n};\nexport var language = {\n    defaultToken: '',\n    tokenPostfix: '.objective-c',\n    keywords: [\n        '#import',\n        '#include',\n        '#define',\n        '#else',\n        '#endif',\n        '#if',\n        '#ifdef',\n        '#ifndef',\n        '#ident',\n        '#undef',\n        '@class',\n        '@defs',\n        '@dynamic',\n        '@encode',\n        '@end',\n        '@implementation',\n        '@interface',\n        '@package',\n        '@private',\n        '@protected',\n        '@property',\n        '@protocol',\n        '@public',\n        '@selector',\n        '@synthesize',\n        '__declspec',\n        'assign',\n        'auto',\n        'BOOL',\n        'break',\n        'bycopy',\n        'byref',\n        'case',\n        'char',\n        'Class',\n        'const',\n        'copy',\n        'continue',\n        'default',\n        'do',\n        'double',\n        'else',\n        'enum',\n        'extern',\n        'FALSE',\n        'false',\n        'float',\n        'for',\n        'goto',\n        'if',\n        'in',\n        'int',\n        'id',\n        'inout',\n        'IMP',\n        'long',\n        'nil',\n        'nonatomic',\n        'NULL',\n        'oneway',\n        'out',\n        'private',\n        'public',\n        'protected',\n        'readwrite',\n        'readonly',\n        'register',\n        'return',\n        'SEL',\n        'self',\n        'short',\n        'signed',\n        'sizeof',\n        'static',\n        'struct',\n        'super',\n        'switch',\n        'typedef',\n        'TRUE',\n        'true',\n        'union',\n        'unsigned',\n        'volatile',\n        'void',\n        'while',\n    ],\n    decpart: /\\d(_?\\d)*/,\n    decimal: /0|@decpart/,\n    tokenizer: {\n        root: [\n            { include: '@comments' },\n            { include: '@whitespace' },\n            { include: '@numbers' },\n            { include: '@strings' },\n            [/[,:;]/, 'delimiter'],\n            [/[{}\\[\\]()<>]/, '@brackets'],\n            [/[a-zA-Z@#]\\w*/, {\n                    cases: {\n                        '@keywords': 'keyword',\n                        '@default': 'identifier'\n                    }\n                }],\n            [/[<>=\\\\+\\\\-\\\\*\\\\/\\\\^\\\\|\\\\~,]|and\\\\b|or\\\\b|not\\\\b]/, 'operator'],\n        ],\n        whitespace: [\n            [/\\s+/, 'white'],\n        ],\n        comments: [\n            ['\\\\/\\\\*', 'comment', '@comment'],\n            ['\\\\/\\\\/+.*', 'comment'],\n        ],\n        comment: [\n            ['\\\\*\\\\/', 'comment', '@pop'],\n            ['.', 'comment',],\n        ],\n        numbers: [\n            [/0[xX][0-9a-fA-F]*(_?[0-9a-fA-F])*/, 'number.hex'],\n            [/@decimal((\\.@decpart)?([eE][\\-+]?@decpart)?)[fF]*/, {\n                    cases: {\n                        '(\\\\d)*': 'number',\n                        '$0': 'number.float'\n                    }\n                }]\n        ],\n        // Recognize strings, including those broken across lines with \\ (but not without)\n        strings: [\n            [/'$/, 'string.escape', '@popall'],\n            [/'/, 'string.escape', '@stringBody'],\n            [/\"$/, 'string.escape', '@popall'],\n            [/\"/, 'string.escape', '@dblStringBody']\n        ],\n        stringBody: [\n            [/\\\\./, 'string'],\n            [/'/, 'string.escape', '@popall'],\n            [/.(?=.*')/, 'string'],\n            [/.*\\\\$/, 'string'],\n            [/.*$/, 'string', '@popall']\n        ],\n        dblStringBody: [\n            [/\\\\./, 'string'],\n            [/\"/, 'string.escape', '@popall'],\n            [/.(?=.*\")/, 'string'],\n            [/.*\\\\$/, 'string'],\n            [/.*$/, 'string', '@popall']\n        ]\n    }\n};\n"]}