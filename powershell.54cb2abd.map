{"version":3,"sources":["../node_modules/monaco-editor/esm/vs/basic-languages/powershell/powershell.js"],"names":["conf","wordPattern","comments","lineComment","blockComment","brackets","autoClosingPairs","open","close","notIn","surroundingPairs","folding","markers","start","RegExp","end","language","defaultToken","ignoreCase","tokenPostfix","token","keywords","helpKeywords","symbols","escapes","tokenizer","root","cases","next","string","herestring","comment"],"mappings":"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","file":"powershell.54cb2abd.map","sourceRoot":"../public","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nexport var conf = {\n    // the default separators except `$-`\n    wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\#%\\^\\&\\*\\(\\)\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g,\n    comments: {\n        lineComment: '#',\n        blockComment: ['<#', '#>'],\n    },\n    brackets: [\n        ['{', '}'],\n        ['[', ']'],\n        ['(', ')']\n    ],\n    autoClosingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"', notIn: ['string'] },\n        { open: '\\'', close: '\\'', notIn: ['string', 'comment'] },\n    ],\n    surroundingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: '\\'', close: '\\'' },\n    ],\n    folding: {\n        markers: {\n            start: new RegExp(\"^\\\\s*#region\\\\b\"),\n            end: new RegExp(\"^\\\\s*#endregion\\\\b\")\n        }\n    }\n};\nexport var language = {\n    defaultToken: '',\n    ignoreCase: true,\n    tokenPostfix: '.ps1',\n    brackets: [\n        { token: 'delimiter.curly', open: '{', close: '}' },\n        { token: 'delimiter.square', open: '[', close: ']' },\n        { token: 'delimiter.parenthesis', open: '(', close: ')' }\n    ],\n    keywords: [\n        'begin', 'break', 'catch', 'class', 'continue', 'data',\n        'define', 'do', 'dynamicparam', 'else', 'elseif', 'end',\n        'exit', 'filter', 'finally', 'for', 'foreach', 'from',\n        'function', 'if', 'in', 'param', 'process', 'return',\n        'switch', 'throw', 'trap', 'try', 'until', 'using',\n        'var', 'while', 'workflow', 'parallel', 'sequence', 'inlinescript', 'configuration'\n    ],\n    helpKeywords: /SYNOPSIS|DESCRIPTION|PARAMETER|EXAMPLE|INPUTS|OUTPUTS|NOTES|LINK|COMPONENT|ROLE|FUNCTIONALITY|FORWARDHELPTARGETNAME|FORWARDHELPCATEGORY|REMOTEHELPRUNSPACE|EXTERNALHELP/,\n    // we include these common regular expressions\n    symbols: /[=><!~?&%|+\\-*\\/\\^;\\.,]+/,\n    escapes: /`(?:[abfnrtv\\\\\"'$]|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n    // The main tokenizer for our languages\n    tokenizer: {\n        root: [\n            // commands and keywords\n            [/[a-zA-Z_][\\w-]*/, {\n                    cases: {\n                        '@keywords': { token: 'keyword.$0' },\n                        '@default': ''\n                    }\n                }],\n            // whitespace\n            [/[ \\t\\r\\n]+/, ''],\n            // labels\n            [/^:\\w*/, 'metatag'],\n            // variables\n            [/\\$(\\{((global|local|private|script|using):)?[\\w]+\\}|((global|local|private|script|using):)?[\\w]+)/, 'variable'],\n            // Comments\n            [/<#/, 'comment', '@comment'],\n            [/#.*$/, 'comment'],\n            // delimiters\n            [/[{}()\\[\\]]/, '@brackets'],\n            [/@symbols/, 'delimiter'],\n            // numbers\n            [/\\d*\\.\\d+([eE][\\-+]?\\d+)?/, 'number.float'],\n            [/0[xX][0-9a-fA-F_]*[0-9a-fA-F]/, 'number.hex'],\n            [/\\d+?/, 'number'],\n            // delimiter: after number because of .\\d floats\n            [/[;,.]/, 'delimiter'],\n            // strings:\n            [/\\@\"/, 'string', '@herestring.\"'],\n            [/\\@'/, 'string', '@herestring.\\''],\n            [/\"/, {\n                    cases: {\n                        '@eos': 'string',\n                        '@default': { token: 'string', next: '@string.\"' }\n                    }\n                }],\n            [/'/, {\n                    cases: {\n                        '@eos': 'string',\n                        '@default': { token: 'string', next: '@string.\\'' }\n                    }\n                }],\n        ],\n        string: [\n            [/[^\"'\\$`]+/, {\n                    cases: {\n                        '@eos': { token: 'string', next: '@popall' },\n                        '@default': 'string'\n                    }\n                }],\n            [/@escapes/, {\n                    cases: {\n                        '@eos': { token: 'string.escape', next: '@popall' },\n                        '@default': 'string.escape'\n                    }\n                }],\n            [/`./, {\n                    cases: {\n                        '@eos': { token: 'string.escape.invalid', next: '@popall' },\n                        '@default': 'string.escape.invalid'\n                    }\n                }],\n            [/\\$[\\w]+$/, {\n                    cases: {\n                        '$S2==\"': { token: 'variable', next: '@popall' },\n                        '@default': { token: 'string', next: '@popall' }\n                    }\n                }],\n            [/\\$[\\w]+/, {\n                    cases: {\n                        '$S2==\"': 'variable',\n                        '@default': 'string'\n                    }\n                }],\n            [/[\"']/, {\n                    cases: {\n                        '$#==$S2': { token: 'string', next: '@pop' },\n                        '@default': {\n                            cases: {\n                                '@eos': { token: 'string', next: '@popall' },\n                                '@default': 'string'\n                            }\n                        }\n                    }\n                }],\n        ],\n        herestring: [\n            [/^\\s*([\"'])@/, {\n                    cases: {\n                        '$1==$S2': { token: 'string', next: '@pop' },\n                        '@default': 'string'\n                    }\n                }],\n            [/[^\\$`]+/, 'string'],\n            [/@escapes/, 'string.escape'],\n            [/`./, 'string.escape.invalid'],\n            [/\\$[\\w]+/, {\n                    cases: {\n                        '$S2==\"': 'variable',\n                        '@default': 'string'\n                    }\n                }],\n        ],\n        comment: [\n            [/[^#\\.]+/, 'comment'],\n            [/#>/, 'comment', '@pop'],\n            [/(\\.)(@helpKeywords)(?!\\w)/, { token: 'comment.keyword.$2' }],\n            [/[\\.#]/, 'comment']\n        ],\n    },\n};\n"]}