{"version":3,"sources":["../node_modules/monaco-editor/esm/vs/basic-languages/coffee/coffee.js"],"names":["conf","wordPattern","comments","blockComment","lineComment","brackets","autoClosingPairs","open","close","surroundingPairs","folding","markers","start","RegExp","end","language","defaultToken","ignoreCase","tokenPostfix","token","regEx","keywords","symbols","escapes","tokenizer","root","cases","next","string","herestring","comment","hereregexp"],"mappings":"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","file":"coffee.e8c46bb9.map","sourceRoot":"../public","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nexport var conf = {\n    wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\#%\\^\\&\\*\\(\\)\\=\\$\\-\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g,\n    comments: {\n        blockComment: ['###', '###'],\n        lineComment: '#'\n    },\n    brackets: [\n        ['{', '}'],\n        ['[', ']'],\n        ['(', ')']\n    ],\n    autoClosingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: '\\'', close: '\\'' },\n    ],\n    surroundingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: '\\'', close: '\\'' },\n    ],\n    folding: {\n        markers: {\n            start: new RegExp(\"^\\\\s*#region\\\\b\"),\n            end: new RegExp(\"^\\\\s*#endregion\\\\b\")\n        }\n    }\n};\nexport var language = {\n    defaultToken: '',\n    ignoreCase: true,\n    tokenPostfix: '.coffee',\n    brackets: [\n        { open: '{', close: '}', token: 'delimiter.curly' },\n        { open: '[', close: ']', token: 'delimiter.square' },\n        { open: '(', close: ')', token: 'delimiter.parenthesis' }\n    ],\n    regEx: /\\/(?!\\/\\/)(?:[^\\/\\\\]|\\\\.)*\\/[igm]*/,\n    keywords: [\n        'and', 'or', 'is', 'isnt', 'not', 'on', 'yes', '@', 'no', 'off',\n        'true', 'false', 'null', 'this',\n        'new', 'delete', 'typeof', 'in', 'instanceof',\n        'return', 'throw', 'break', 'continue', 'debugger',\n        'if', 'else', 'switch', 'for', 'while', 'do', 'try', 'catch', 'finally',\n        'class', 'extends', 'super',\n        'undefined', 'then', 'unless', 'until', 'loop', 'of', 'by', 'when'\n    ],\n    // we include these common regular expressions\n    symbols: /[=><!~?&%|+\\-*\\/\\^\\.,\\:]+/,\n    escapes: /\\\\(?:[abfnrtv\\\\\"'$]|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n    // The main tokenizer for our languages\n    tokenizer: {\n        root: [\n            // identifiers and keywords\n            [/\\@[a-zA-Z_]\\w*/, 'variable.predefined'],\n            [/[a-zA-Z_]\\w*/, {\n                    cases: {\n                        'this': 'variable.predefined',\n                        '@keywords': { token: 'keyword.$0' },\n                        '@default': ''\n                    }\n                }],\n            // whitespace\n            [/[ \\t\\r\\n]+/, ''],\n            // Comments\n            [/###/, 'comment', '@comment'],\n            [/#.*$/, 'comment'],\n            // regular expressions\n            ['///', { token: 'regexp', next: '@hereregexp' }],\n            [/^(\\s*)(@regEx)/, ['', 'regexp']],\n            [/(\\()(\\s*)(@regEx)/, ['@brackets', '', 'regexp']],\n            [/(\\,)(\\s*)(@regEx)/, ['delimiter', '', 'regexp']],\n            [/(\\=)(\\s*)(@regEx)/, ['delimiter', '', 'regexp']],\n            [/(\\:)(\\s*)(@regEx)/, ['delimiter', '', 'regexp']],\n            [/(\\[)(\\s*)(@regEx)/, ['@brackets', '', 'regexp']],\n            [/(\\!)(\\s*)(@regEx)/, ['delimiter', '', 'regexp']],\n            [/(\\&)(\\s*)(@regEx)/, ['delimiter', '', 'regexp']],\n            [/(\\|)(\\s*)(@regEx)/, ['delimiter', '', 'regexp']],\n            [/(\\?)(\\s*)(@regEx)/, ['delimiter', '', 'regexp']],\n            [/(\\{)(\\s*)(@regEx)/, ['@brackets', '', 'regexp']],\n            [/(\\;)(\\s*)(@regEx)/, ['', '', 'regexp']],\n            // delimiters\n            [/}/, {\n                    cases: {\n                        '$S2==interpolatedstring': { token: 'string', next: '@pop' },\n                        '@default': '@brackets'\n                    }\n                }],\n            [/[{}()\\[\\]]/, '@brackets'],\n            [/@symbols/, 'delimiter'],\n            // numbers\n            [/\\d+[eE]([\\-+]?\\d+)?/, 'number.float'],\n            [/\\d+\\.\\d+([eE][\\-+]?\\d+)?/, 'number.float'],\n            [/0[xX][0-9a-fA-F]+/, 'number.hex'],\n            [/0[0-7]+(?!\\d)/, 'number.octal'],\n            [/\\d+/, 'number'],\n            // delimiter: after number because of .\\d floats\n            [/[,.]/, 'delimiter'],\n            // strings:\n            [/\"\"\"/, 'string', '@herestring.\"\"\"'],\n            [/'''/, 'string', '@herestring.\\'\\'\\''],\n            [/\"/, {\n                    cases: {\n                        '@eos': 'string',\n                        '@default': { token: 'string', next: '@string.\"' }\n                    }\n                }],\n            [/'/, {\n                    cases: {\n                        '@eos': 'string',\n                        '@default': { token: 'string', next: '@string.\\'' }\n                    }\n                }],\n        ],\n        string: [\n            [/[^\"'\\#\\\\]+/, 'string'],\n            [/@escapes/, 'string.escape'],\n            [/\\./, 'string.escape.invalid'],\n            [/\\./, 'string.escape.invalid'],\n            [/#{/, {\n                    cases: {\n                        '$S2==\"': { token: 'string', next: 'root.interpolatedstring' },\n                        '@default': 'string'\n                    }\n                }],\n            [/[\"']/, {\n                    cases: {\n                        '$#==$S2': { token: 'string', next: '@pop' },\n                        '@default': 'string'\n                    }\n                }],\n            [/#/, 'string']\n        ],\n        herestring: [\n            [/(\"\"\"|''')/, {\n                    cases: {\n                        '$1==$S2': { token: 'string', next: '@pop' },\n                        '@default': 'string'\n                    }\n                }],\n            [/[^#\\\\'\"]+/, 'string'],\n            [/['\"]+/, 'string'],\n            [/@escapes/, 'string.escape'],\n            [/\\./, 'string.escape.invalid'],\n            [/#{/, { token: 'string.quote', next: 'root.interpolatedstring' }],\n            [/#/, 'string']\n        ],\n        comment: [\n            [/[^#]+/, 'comment',],\n            [/###/, 'comment', '@pop'],\n            [/#/, 'comment'],\n        ],\n        hereregexp: [\n            [/[^\\\\\\/#]+/, 'regexp'],\n            [/\\\\./, 'regexp'],\n            [/#.*$/, 'comment'],\n            ['///[igm]*', { token: 'regexp', next: '@pop' }],\n            [/\\//, 'regexp'],\n        ],\n    },\n};\n"]}