{"version":3,"sources":["../node_modules/monaco-editor/esm/vs/basic-languages/xml/xml.js"],"names":["conf","comments","blockComment","brackets","autoClosingPairs","open","close","surroundingPairs","language","defaultToken","tokenPostfix","ignoreCase","qualifiedName","tokenizer","root","include","token","next","cdata","tag","whitespace","comment"],"mappings":"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","file":"xml.913a617d.map","sourceRoot":"../public","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nexport var conf = {\n    comments: {\n        blockComment: ['<!--', '-->'],\n    },\n    brackets: [\n        ['<', '>']\n    ],\n    autoClosingPairs: [\n        { open: '<', close: '>' },\n        { open: '\\'', close: '\\'' },\n        { open: '\"', close: '\"' },\n    ],\n    surroundingPairs: [\n        { open: '<', close: '>' },\n        { open: '\\'', close: '\\'' },\n        { open: '\"', close: '\"' },\n    ]\n};\nexport var language = {\n    defaultToken: '',\n    tokenPostfix: '.xml',\n    ignoreCase: true,\n    // Useful regular expressions\n    qualifiedName: /(?:[\\w\\.\\-]+:)?[\\w\\.\\-]+/,\n    tokenizer: {\n        root: [\n            [/[^<&]+/, ''],\n            { include: '@whitespace' },\n            // Standard opening tag\n            [/(<)(@qualifiedName)/, [\n                    { token: 'delimiter' },\n                    { token: 'tag', next: '@tag' }\n                ]],\n            // Standard closing tag\n            [/(<\\/)(@qualifiedName)(\\s*)(>)/, [\n                    { token: 'delimiter' },\n                    { token: 'tag' },\n                    '',\n                    { token: 'delimiter' }\n                ]],\n            // Meta tags - instruction\n            [/(<\\?)(@qualifiedName)/, [\n                    { token: 'delimiter' },\n                    { token: 'metatag', next: '@tag' }\n                ]],\n            // Meta tags - declaration\n            [/(<\\!)(@qualifiedName)/, [\n                    { token: 'delimiter' },\n                    { token: 'metatag', next: '@tag' }\n                ]],\n            // CDATA\n            [/<\\!\\[CDATA\\[/, { token: 'delimiter.cdata', next: '@cdata' }],\n            [/&\\w+;/, 'string.escape'],\n        ],\n        cdata: [\n            [/[^\\]]+/, ''],\n            [/\\]\\]>/, { token: 'delimiter.cdata', next: '@pop' }],\n            [/\\]/, '']\n        ],\n        tag: [\n            [/[ \\t\\r\\n]+/, ''],\n            [/(@qualifiedName)(\\s*=\\s*)(\"[^\"]*\"|'[^']*')/, ['attribute.name', '', 'attribute.value']],\n            [/(@qualifiedName)(\\s*=\\s*)(\"[^\">?\\/]*|'[^'>?\\/]*)(?=[\\?\\/]\\>)/, ['attribute.name', '', 'attribute.value']],\n            [/(@qualifiedName)(\\s*=\\s*)(\"[^\">]*|'[^'>]*)/, ['attribute.name', '', 'attribute.value']],\n            [/@qualifiedName/, 'attribute.name'],\n            [/\\?>/, { token: 'delimiter', next: '@pop' }],\n            [/(\\/)(>)/, [\n                    { token: 'tag' },\n                    { token: 'delimiter', next: '@pop' }\n                ]],\n            [/>/, { token: 'delimiter', next: '@pop' }],\n        ],\n        whitespace: [\n            [/[ \\t\\r\\n]+/, ''],\n            [/<!--/, { token: 'comment', next: '@comment' }]\n        ],\n        comment: [\n            [/[^<\\-]+/, 'comment.content'],\n            [/-->/, { token: 'comment', next: '@pop' }],\n            [/<!--/, 'comment.content.invalid'],\n            [/[<\\-]/, 'comment.content']\n        ],\n    },\n};\n"]}